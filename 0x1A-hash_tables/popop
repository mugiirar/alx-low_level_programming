#include "hash_tables.h"

int hash_table_set(hash_table_t *ht, const char *key, const char *value)
{
	hash_table_t *pvp;
	unsigned int long n_k, p;
	int k;

	if (ht == NULL)
		return (0);

	if (key == NULL || *key == '\0')
		return (0);

	if (value == NULL || *value == '\0')
		return (0);

	n_k = key_index((const unsigned char *)key, ht->size);


	pvp = malloc(sizeof(hash_node_t));
	if (pvp == NULL)
	{
		return (0);
	}

	p = n_k;
	while(ht->array[p])
	{
		k = strcmp(ht->array[p]->key, key);
		if(k == 0)
		{
			return (1);
		}
		p = p + 1;
	}

	pvp->key = key;
	pvp->value = value;
	pvp->next = ht->array[n_k];
	ht->array[index] = pvp;

	return (1);
}
